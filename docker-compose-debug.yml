version: "2"

volumes:
  dbvolume:
  ipython:
  static_volume:
  progress_volume:
  secrets_volume:
  torrent:

services:
  db:
    image: postgres:12.15
    ports:
      - 5543:5432
    env_file:
      - .env
    volumes:
      - dbvolume:/var/lib/postgresql/data/
      
  web:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    restart: always
    ports:
      - 8000:8000
      - 9091:9091
      - 51413:51413
    env_file:
      - .env
    environment:
      - DEBUG=1
    volumes:
      - ./backend/:/usr/src/app/
      - ./Videos/:/usr/src/app/Videos
      - progress_volume:/usr/progress/
      - static_volume:/usr/src/app/staticfiles
      - /static/
      - ipython:/root/.ipython
      - torrent:/usr/torrent/:rw
    command: bash -c "service transmission-daemon start && ./wait-for-it.sh db:5432 -- python3 /usr/src/app/manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
      - redis

  nginx:
    build: ./nginx
    volumes:
      - ./backend/:/usr/src/app/
      - ./Videos/:/usr/src/app/Videos
      - static_volume:/usr/src/app/staticfiles
      - torrent:/usr/torrent/:rw
      - secrets_volume:/secrets/
    ports:
      - 1337:80
    depends_on:
      - web

  frontend:
    build: ./frontend
    volumes:
      - ./frontend/:/usr/src/app/
      - /usr/src/app/node_modules
    command: bash -c "npm start"
    depends_on:
      - web
    env_file:
      - .env
    ports:
      - 3000:3000

  celery:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    command: bash -c "./start_celery_workers.sh"
    volumes:
        - ./backend/:/usr/src/app/
        - ./Videos/:/usr/src/app/Videos
        - progress_volume:/usr/progress/
        - torrent:/usr/torrent/:rw
    env_file:
        - .env
    depends_on:
        - db
        - redis

  redis:
    image: redis:alpine
    command: redis-server --port 6380
    ports:
        - 6380:6380
